<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Blog by ParkJaesung]]></title><description><![CDATA[건설환경공학을 전공하는 개발자. 스타트업에 도전하는 것과 새로운 기술들을 공부하는 것을 사랑합니다.]]></description><link>https://lumen.netlify.com</link><generator>RSS for Node</generator><lastBuildDate>Fri, 19 Apr 2019 13:27:14 GMT</lastBuildDate><item><title><![CDATA[xcode bundle identifier 변경하기]]></title><description><![CDATA[React Native로 IOS개발을 진행하던 도중 Xcode에서 Bundle Identifier를 변경해야 provisioning profile를 생성할 수 있다는 오류 해결]]></description><link>https://lumen.netlify.com/posts/change-xcode-bundle-identifier/</link><guid isPermaLink="false">https://lumen.netlify.com/posts/change-xcode-bundle-identifier/</guid><pubDate>Sun, 22 Jul 2018 23:46:37 GMT</pubDate><content:encoded>&lt;p&gt;xcode bundle identifier 변경
react-native 혹은, ios를 github 저장소에서 받아서 프로젝트를 archive하거나 release를 하려다 보면 Bundler Identifier를 변경해야 provisioning profile을 생성할 수 있다는 에러가 뜬다. 이러한 경우에는 Bundle Identifier를 변경해야 한다. react-native의 ios 폴더안에 있는 xcode workspace 파일을 xcode로 열고 아래의 순서를 따른다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Target -&gt; Build Settings -&gt; product bundle 검색 -&gt; product bundle identifier&lt;/li&gt;
&lt;li&gt;더블 클릭 후 변경&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title><![CDATA[react native 'third party' 관련 빌드 에러 해결방법]]></title><description><![CDATA[React Native로 개발할때, 빌드시 발생하는 ‘third-party’와 관련된 에러를 해결해본다.]]></description><link>https://lumen.netlify.com/posts/fix-react-native-third-party-error/</link><guid isPermaLink="false">https://lumen.netlify.com/posts/fix-react-native-third-party-error/</guid><pubDate>Sun, 22 Jul 2018 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;최근 react-native으로 어플을 개발하게 되면서 관심있는 여러 프로젝트들의 저장소를 내려받아 실행해보고자 하였다. 그러나 의외로 다양한 에러들이 발생하며 빌드에 실패하였다.
그 중 가장 대표적인 에러가 빌드시 발생하는 ‘third-party’와 관련된 에러였다. 에러 발생 로그를 자세히 살펴보니 third-party 라이브러리를 정상적으로 읽을 수 없거나 불러오지 못하는 문제였다.
구글링 결과 react-native에서는 개발환경을 위해 여러 라이브러리를 사용하며 빌드 스크립트를 뜯어보면 github에서 라이브러리 릴리즈 파일을 받도록 되어있다. 그러나 빌드 도중 취소되거나, 네트워크 지연 상의 이유로 github으로 부터 정상적으로 third-party 라이브러리를 받아오지 못하는 경우가 있다. 그러한 경우에는 특정 라이브러리를 삭제하고 수작업으로 라이브러리를 받아서 디렉토리에 저장하던가, 디렉토리 전체를 삭제하고 안정적인 환경에서 빌드를 다시 시작하는 방법이 있다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;#!/bin/bash
#boostdir=&amp;quot;`node ./node_modules/boost-lib/bin/boost-lib download -V 1.63`&amp;quot;
#cd &amp;quot;$boostdir&amp;quot;
#./bootstrap.sh
#./b2 headers
set -e
cachedir=&amp;quot;$HOME/.rncache&amp;quot;
mkdir -p &amp;quot;$cachedir&amp;quot;
function fetch_and_unpack () {
    file=$1
    url=$2
    cmd=$3
if [ ! -f &amp;quot;$cachedir/$file&amp;quot; ]; then
        (cd &amp;quot;$cachedir&amp;quot;; curl -J -L -O &amp;quot;$url&amp;quot;)
    fi
dir=$(basename &amp;quot;$file&amp;quot; .tar.gz)
    if [ ! -d &amp;quot;third-party/$dir&amp;quot; ]; then
        (cd third-party;
         echo Unpacking &amp;quot;$cachedir/$file&amp;quot;...
         tar zxf &amp;quot;$cachedir/$file&amp;quot;
cd &amp;quot;$dir&amp;quot;
         eval &amp;quot;${cmd:-true}&amp;quot;)
    fi
}
mkdir -p third-party
SCRIPTDIR=$(dirname &amp;quot;$0&amp;quot;)
fetch_and_unpack glog-0.3.4.tar.gz https://github.com/google/glog/archive/v0.3.4.tar.gz &amp;quot;$SCRIPTDIR/ios-configure-glog.sh&amp;quot;
fetch_and_unpack double-conversion-1.1.5.tar.gz https://github.com/google/double-conversion/archive/v1.1.5.tar.gz
fetch_and_unpack boost_1_63_0.tar.gz https://github.com/react-native-community/boost-for-react-native/releases/download/v1.63.0-0/boost_1_63_0.tar.gz
fetch_and_unpack folly-2016.09.26.00.tar.gz https://github.com/facebook/folly/archive/v2016.09.26.00.tar.gz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위에서 보이는 것과 같이 빌드 스크립트에서 해당 github 주소가 보인다. 위 주소를 통해 직접 다운로드를 하거나, 아래와 같은 절차를 따른다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;~/.rncache 디렉토리 삭제&lt;/li&gt;
&lt;li&gt;react-native run-ios 명령어를 통해 curl: Saved to filename 로그가 정상적으로 나오는지 확인한다.&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item></channel></rss>